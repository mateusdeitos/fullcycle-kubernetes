apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 2
  template:
    metadata:
      name: "goserver"
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: md91/hello-go:v8

          resources:
            requests:
              cpu: "0.1"
              memory: 50Mi
            limits:
              cpu: "0.25"
              memory: 100Mi

          startupProbe:
            httpGet:
              path: /health
              port: 8000 #container port
            periodSeconds: 3 # how often to probe
            failureThreshold: 10 # how many consecutive probes before failure

          readinessProbe:
            httpGet:
              path: /health
              port: 8000 #container port
            periodSeconds: 3 # how often to probe
            failureThreshold: 1 # how many consecutive probes before failure
            timeoutSeconds: 10 # how long to wait before timeout (each timeout will be considered a failure)
            successThreshold: 1 # how many consecutive successes before success

          livenessProbe:
              httpGet:
                path: /health
                port: 8000 #container port
              periodSeconds: 5 # how often to probe
              failureThreshold: 1 # how many consecutive probes before failure
              timeoutSeconds: 10 # how long to wait before timeout (each timeout will be considered a failure)
              successThreshold: 1 # how many consecutive successes before success 

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret

          volumeMounts:
            - name: config
              mountPath: "go/myfamily"

      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
              - key: members
                path: family.txt

